<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.mallmbg.mapper.MallProductSkuMapper">
  <resultMap id="BaseResultMap" type="com.mall.mallmbg.model.MallProductSku">
    <id column="sku_id" jdbcType="INTEGER" property="skuId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="properties" jdbcType="VARCHAR" property="properties" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="sell_sum" jdbcType="INTEGER" property="sellSum" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sku_id, product_id, properties, pic_url, price, sell_sum, cost, stock, create_time, 
    modify_time
  </sql>
  <select id="selectByExample" parameterType="com.mall.mallmbg.model.MallProductSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mall_product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mall_product_sku
    where sku_id = #{skuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mall_product_sku
    where sku_id = #{skuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mall.mallmbg.model.MallProductSkuExample">
    delete from mall_product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mall.mallmbg.model.MallProductSku">
    insert into mall_product_sku (sku_id, product_id, properties, 
      pic_url, price, sell_sum, 
      cost, stock, create_time, 
      modify_time)
    values (#{skuId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{properties,jdbcType=VARCHAR}, 
      #{picUrl,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{sellSum,jdbcType=INTEGER}, 
      #{cost,jdbcType=DECIMAL}, #{stock,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mall.mallmbg.model.MallProductSku">
    insert into mall_product_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="properties != null">
        properties,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="sellSum != null">
        sell_sum,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="skuId != null">
        #{skuId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="properties != null">
        #{properties,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="sellSum != null">
        #{sellSum,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mall.mallmbg.model.MallProductSkuExample" resultType="java.lang.Integer">
    select count(*) from mall_product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mall_product_sku
    <set>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.properties != null">
        properties = #{record.properties,jdbcType=VARCHAR},
      </if>
      <if test="record.picUrl != null">
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.sellSum != null">
        sell_sum = #{record.sellSum,jdbcType=INTEGER},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=DECIMAL},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mall_product_sku
    set sku_id = #{record.skuId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      properties = #{record.properties,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      sell_sum = #{record.sellSum,jdbcType=INTEGER},
      cost = #{record.cost,jdbcType=DECIMAL},
      stock = #{record.stock,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mall.mallmbg.model.MallProductSku">
    update mall_product_sku
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="properties != null">
        properties = #{properties,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="sellSum != null">
        sell_sum = #{sellSum,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sku_id = #{skuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mall.mallmbg.model.MallProductSku">
    update mall_product_sku
    set product_id = #{productId,jdbcType=INTEGER},
      properties = #{properties,jdbcType=VARCHAR},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      sell_sum = #{sellSum,jdbcType=INTEGER},
      cost = #{cost,jdbcType=DECIMAL},
      stock = #{stock,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where sku_id = #{skuId,jdbcType=INTEGER}
  </update>
</mapper>