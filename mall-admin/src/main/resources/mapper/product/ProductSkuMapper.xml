<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.malladmin.mapper.product.ProductSkuMapper">

    <resultMap id="ProductSkuMap" type="com.mall.malladmin.dto.product.ProductSkuDto">
        <result column="skuId" property="skuId"/>
        <result column="productId" property="productId"/>
        <result column="productName" property="productName"/>
        <result column="properties" property="properties"/>
        <result column="typeId" property="typeId"/>
        <result column="typeName" property="typeName"/>
        <result column="cost" property="cost"/>
        <result column="sellSum" property="sellSum"/>
        <result column="stock" property="stock"/>
        <result column="picUrl" property="picUrl"/>
        <result column="priceMin" property="priceMin"/>
    </resultMap>

    <select id="getList" resultMap="ProductSkuMap">
        SELECT
            a.sku_id skuId,
            a.cost,
            a.price,
            a.properties,
            a.sell_sum sellSum,
            a.stock,
            a.pic_url picUrl,
            b.price_min priceMin,
            b.product_name productName,
            c1.type_name typeName,
            c1.type_Id typeId,
            b.product_Id productId
        FROM
            mall_product_sku a
        INNER JOIN mall_product b ON a.product_id = b.product_id
        INNER JOIN mall_product_type c1 ON c1.type_id = b.type_id
        where 1 = 1
        AND a.is_delete = '0'
        <if test="dto.productName!=null and dto.productName!=''">
            AND b.product_name like '%${dto.productName}%'
        </if>
        <if test="dto.productId!=null and dto.productId!=''">
            AND b.product_id = #{dto.productId}
        </if>
        <if test="dto.typeName!=null and dto.typeName!=''">
            AND c1.type_name like '%${dto.typeName}%'
        </if>
    </select>


    <delete id="deleteByIsSaleProperty">
      DELETE  FROM mall_product_sku WHERE properties LIKE '%${property}%'
    </delete>
</mapper>
        <!--
            <id>：主键字段
            <result>：普通字段
            type：整体封装出的类型
            column：字段名（表里定义好的）
            property：关联属性（查询出来的结果封装成Country里的哪个属性）
            ofType：指定属性类型（关联属性是什么类型）
            <collection>：集合封装
             association:用于配置1对1的映射
                                属性property：company对象在user对象中的属性名
                                属性javaType：company属性的java对象 类型
                                属性column：user表中的外键引用company表
            collection ：配置1对多关系映射
                    property：在user里面的List<Account>的属性名
                    ofType:当前account表的java类型
                    column:外键
                -->