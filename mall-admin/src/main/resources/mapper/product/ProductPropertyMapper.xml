<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.malladmin.mapper.product.ProductPropertyMapper">

    <resultMap id="ResultMap" type="com.mall.malladmin.vo.product.ProductPropertyValueVo">
        <result column="propertyValueId" property="propertyValueId"/>
        <result column="propertyNameId" property="propertyNameId"/>
        <result column="propertyName" property="propertyName"/>
        <result column="value" property="value"/>
        <result column="isSale" property="isSale"/>
        <result column="productId" property="productId"/>
    </resultMap>

    <select id="findByPropertyNameIdAndProductId" resultMap="ResultMap">
        SELECT
            a.property_value_id propertyValueId,
            a.product_id productId,
            a.is_sale isSale,
            a.property_name_id propertyNameId,
            a.value value,
            b.name propertyName
        FROM mall_product_property_value a
        inner JOIN mall_product_property_name b ON  a.property_name_id = b.property_name_id
        where 1 = 1
        <if test="propertyNameId!=null and propertyNameId!=''">
            AND a.property_name_id = #{propertyNameId}
        </if>
        <if test="productId!=null and productId!=''">
            AND a.product_id = #{productId}
        </if>
    </select>

</mapper>
        <!--
            <id>：主键字段
            <result>：普通字段
            type：整体封装出的类型
            column：字段名（表里定义好的）
            property：关联属性（查询出来的结果封装成Country里的哪个属性）
            ofType：指定属性类型（关联属性是什么类型）
            <collection>：集合封装
             association:用于配置1对1的映射
                                属性property：company对象在user对象中的属性名
                                属性javaType：company属性的java对象 类型
                                属性column：user表中的外键引用company表
            collection ：配置1对多关系映射
                    property：在user里面的List<Account>的属性名
                    ofType:当前account表的java类型
                    column:外键
                -->